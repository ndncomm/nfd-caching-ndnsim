source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
summary(cs100.hits)
summary(cs80.hits)
summary(cs20.hits)
summary(cs20.hits)
summary(cs20.hits)
cs20.hits
cs100.hits
cs100.hits$Packets
summary(cs20.hits)
summary(cs20)
summary(cs100)
summary(cs100)
summary(cs80)
summary(cs60)
summary(cs100)
summary(cs80)
summary(cs80)
cs80
summary(cs80)
source('~/.active-rstudio-document', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(cs80)
summary(cs100)
summary(cs20)
hits <- melt(data.frame(cs100.hits$Packets,cs80.hits$Packets,cs60.hits$Packets,cs40.hits$Packets,cs20.hits$Packets))
colnames(hits) <- c("Type", "Packets")
summary(hits)
ggplot(hits, aes(x=Type, y=Packets)) +
geom_boxplot() +
ylab("Avg. Cache Hits [/s]")
ggplot(hopcounts, aes(x=Type, y=Packets)) +
geom_boxplot() +
# function for computing mean, DS, max and min values
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot")
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
ylab("Hopcounts")
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
ylab("Hopcounts") + ylim(0,10)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
#   stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "bar") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "barplot") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "bar") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "bar") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") + geom_bar(stat="identity") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max) + geom_bar(stat="identity") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max) + geom_bar(stat="identity") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type)) +
stat_summary(fun.data = min.mean.sd.max) + geom_bar(stat="identity") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max) + geom_bar(stat="identity",position="dodge") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + geom_bar(stat="identity",position="dodge") +
ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +  geom_boxplot()
ggplot(hopcounts, aes(x = Type, y=Packets)) +
#   stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
hopcounts
summary(hopcounts)
summary(app100$HopCount)
summary(app80$HopCount)
summary(app60$HopCount)
summary(app40$HopCount)
summary(app20$HopCount)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
summary(app20$HopCount)
summary(app10$HopCount)
summary(app100$HopCount)
summary(app80$HopCount)
summary(app60$HopCount)
summary(app40$HopCount)
summary(app20$HopCount)
summary(app10$HopCount)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
#   stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + ylab("Hopcounts") + ylim(0,5)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
#   stat_summary(fun.data = min.mean.sd.max, geom = "boxplot") +
geom_jitter(position=position_jitter(width=.2), size=3)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
ggplot(hopcounts, aes(x=Type, y=Packets)) +
geom_boxplot() +
ylab("Avg. Cache Hits [/s]")
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
app100
source('~/.active-rstudio-document', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
length(app100)
length(app100$HopCount)
min.length <- min(length(app100$HopCount),length(app80$HopCount),length(app60$HopCount),length(app40$HopCount),length(app20$HopCount),length(app10$HopCount))
min.length
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
summary(hits)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + ylab("Hopcounts") + ylim(0,5)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
hits
hits
cs100
cs100.hits
cs20.hits
sum(cs20.hits)
sum(cs20.hits$Packets)
cs20.hits
summaryBy(Node, data=cs20.hits)
library(doBy)
install.packages(doBy)
install.packages(doby)
install.packages("doBy")
library(doBy)
summaryBy(Node, data=cs20.hits)
cs20.hits
summary(cs20.hits)
summaryBy(Node, cs20.hits)
summaryBy($Node, cs20.hits)
summaryBy("Node", cs20.hits)
sum(cs20.hits$Packets)
cs20.hits
x <- ddply(cs20.hits, .(Y), summarize, freq=length(Y), tot=sum(Packets))
x <- ddply(cs20.hits, .(Node), summarize, freq=length(Y), tot=sum(Packets))
x <- ddply(cs20.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
x
cs20.hits.sum <- ddply(cs20.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs40.hits.sum <- ddply(cs40.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs40.hits.sum
cs10.hits
cs10.hits.sum
cs10.hits.sum <- ddply(cs10.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs20.hits.sum <- ddply(cs20.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs40.hits.sum <- ddply(cs40.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs60.hits.sum <- ddply(cs60.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs80.hits.sum <- ddply(cs80.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs100.hits.sum <- ddply(cs100.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs10.hits.sum
cs100.hits.sum
melt(cs10.hits.sum,cs20.hits.sum)
melt(cs10.hits.sum,cs20.hits.sum, id=c("Node"))
melt(cs10.hits.sum,cs20.hits.sum, id=c("Node","freq"))
melt(cs10.hits.sum$tot,cs20.hits.sum$tot)
melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot))
melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot,cs40.hits.sum$tot,cs60.hits.sum$tot,cs80.hits.sum$tot,cs100.hits.sum$tot,))
melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot,cs40.hits.sum$tot,cs60.hits.sum$tot,cs80.hits.sum$tot,cs100.hits.sum$tot))
summary(hits)
hits <- melt(data.frame(cs100.hits$Packets,cs80.hits$Packets,cs60.hits$Packets,cs40.hits$Packets,cs20.hits$Packets,cs10.hits$Packets))
colnames(hits) <- c("Type", "Packets")
summary(hits)
hits <- melt(data.frame(cs100.hits$Packets,cs80.hits$Packets,cs60.hits$Packets,cs40.hits$Packets,cs20.hits$Packets,cs10.hits$Packets))
summary(hits)
hits <- melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot,cs40.hits.sum$tot,cs60.hits.sum$tot,cs80.hits.sum$tot,cs100.hits.sum$tot))
summary(hits)
hits <- melt(data.frame(cs100.hits$Packets,cs80.hits$Packets,cs60.hits$Packets,cs40.hits$Packets,cs20.hits$Packets,cs10.hits$Packets))
summary(hits)
hits <- melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot,cs40.hits.sum$tot,cs60.hits.sum$tot,cs80.hits.sum$tot,cs100.hits.sum$tot))
colnames(hits) <- c("Type", "Packets")
summary(hits)
ggplot(hits, aes(x=Type, y=Packets)) + geom_boxplot() +
ylab("Total Cache Hits")
hits <- melt(data.frame(cs10.hits.sum$tot,cs20.hits.sum$tot,cs40.hits.sum$tot,cs60.hits.sum$tot,cs80.hits.sum$tot,cs100.hits.sum$tot))
colnames(hits) <- c("Type", "Packets")
summary(hits)
ggplot(hits, aes(x=Type, y=Packets)) + geom_boxplot() +
ylab("Total Cache Hits")
summary(hits)
cs100.hits
cs100.hits
cs100.hits.sum
melt(cs100.hits.sum,cs20.hits.sum)
merge(cs100.hits.sum,cs20.hits.sum)
data.frame(cs100.hits.sum,cs20.hits.sum)
rbind(cs100.hits.sum,cs20.hits.sum)
cbind(cs100.hits.sum,cs20.hits.sum)
cbind(cs100.hits.sum,cs20.hits.sum)
rbind(cs100.hits.sum,cs20.hits.sum)
cs100.hits.sum$Perc="100"
rbind(cs100.hits.sum,cs20.hits.sum)
cs100.hits.sum$Perc="100"
cs80.hits.sum$Perc="80"
rbind(cs100.hits.sum,cs80.hits.sum)
source('~/.active-rstudio-document', echo=TRUE)
rbind(cs100.hits.sum,cs80.hits.sum,cs60.hits.sum,cs40.hits.sum,cs20.hits.sum,cs10.hits.sum)
cs100.hits.sum$Perc="100"
cs80.hits.sum$Perc="80"
cs60.hits.sum$Perc="60"
cs40.hits.sum$Perc="40"
cs20.hits.sum$Perc="20"
cs10.hits.sum$Perc="10"
rbind(cs100.hits.sum,cs80.hits.sum,cs60.hits.sum,cs40.hits.sum,cs20.hits.sum,cs10.hits.sum)
hits <- rbind(cs100.hits.sum,cs80.hits.sum,cs60.hits.sum,cs40.hits.sum,cs20.hits.sum,cs10.hits.sum)
ggplot(hits, aes(x=Type, y=Packets)) + geom_boxplot() +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc, y=Packets)) + geom_boxplot() +
ylab("Total Cache Hits")
hits
ggplot(hits, aes(x=Perc, y=Packets)) + geom_boxplot() +
ylab("Total Cache Hits")
hits
hits
ggplot(hits, aes(x=Perc)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Percm y=tot)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Percm y=tot)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Percm y=tot)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc y=tot)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc, y=tot)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc, y=tot, color=Perc)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc, y=tot, color=Perc)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=Perc, y=tot, fill=Perc)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
hits
summary(hits)
ggplot(hits, aes(x=Perc, y=tot, fill=Node)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
cs100.hits.sum$scen=100
cs80.hits.sum$scen=80
cs60.hits.sum$scen=60
cs40.hits.sum$scen=40
cs20.hits.sum$scen=20
cs10.hits.sum$scen=10
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
summary(hits)
summary(hits)
hits <- rbind(cs100.hits.sum,cs80.hits.sum,cs60.hits.sum,cs40.hits.sum,cs20.hits.sum,cs10.hits.sum)
colnames(hits) <- c("Type", "Packets")
source('~/.active-rstudio-document', echo=TRUE)
cs100.hits.sum <- ddply(cs100.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs100.hits.sum$scen=100
cs100.hits.sum
summary(hits)
hits <- rbind(cs100.hits.sum,cs80.hits.sum,cs60.hits.sum,cs40.hits.sum,cs20.hits.sum,cs10.hits.sum)
summary(hits)
ggplot(hits, aes(x=scen, y=tot, fill=Node)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=ordered(scen), y=tot, fill=Node)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
by(hits$tot, x$Node, sum)
by(hits$tot, x$Node, sum)
by(hits$tot, hits$Node, sum)
hits$sum <- by(hits$tot, hits$Node, sum)
summary(hits)
ggplot(hits, aes(x=ordered(scen), y=tot, fill=Node)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
summary(hits)
summary(hits)
ggplot(hits, aes(x=ordered(scen), y=tot, fill=Node)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=ordered(scen), y=tot, fill=Node)) + geom_bar(stat="identity",position="dodge") +
ylab("Total Cache Hits")
ggplot(hits, aes(x=ordered(scen), y=tot, fill=Node)) + geom_bar(stat="identity") +
ylab("Total Cache Hits")
cs100.hits.sum
hits
hits
cs10.hits <- subset(cs10, Type=="CacheHits")
cs10.hits
cs10
ggplot(hits, aes(x=ordered(scen), y=tot/1000, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]")
ggplot(hits, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]")
ggplot(hits, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]"
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
ggplot(hits, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits
source('~/.active-rstudio-document', echo=TRUE)
g.hits
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
dflist <- c("100","80","60","40","20","10")
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table("../results/ar" + i + "cs-trace.txt", header=T)
cs.temp
}
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table("../results/ar`i'cs-trace.txt", header=T)
cs.temp
}
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt"), header=T)
cs.temp
}
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
cs.temp
}
cs.temp
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
cs.temp
}
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
cs.temp$scen=paste(i)
}
cs.temp
cs <- data.frame()
cs <- data.frame()
dflist <- c("100","80","60","40","20","10")
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
cs.temp$scen=paste(i)
cs <- rbind(cs,cs.temp)
}
cs
cs.hits.sum <- ddply(cs.hits, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs.hits.sum <- ddply(cs, .(Node), summarize, freq=length(Node), tot=sum(Packets))
cs.hits.sum
cs
cs.hits.sum
cs
summary(cs)
summary(cs)
cs.hits.sum <- ddply(cs, .(Node,Type), summarize, freq=length(Node), tot=sum(Packets))
cs.hits.sum
summary(cs)
cs.sum <- ddply(cs, .(Node,Type), summarize, freq=length(Node), tot=sum(Packets))
cs.sum
summary(cs)
cs.sum
cs.sum <- ddply(cs, .(Node,Type,scen), summarize, freq=length(Node), tot=sum(Packets))
cs.sum
cs.hits.sum <- subset(cs.sum, Type=="CacheHits")
cs.hits.sum
g.hits <- ggplot(cs.hits.sum, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits2
g.hits2 <- ggplot(cs.hits.sum, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits2
g.hits
g.hits <- ggplot(hits, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits
g.hits2
g.hits
g.hits2
g.hits <- ggplot(hits, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits
cs <- data.frame()
dflist <- c(100,80,60,40,20,10)
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
cs.temp$scen=i
cs <- rbind(cs,cs.temp)
}
cs
g.hits2 <- ggplot(cs.hits.sum, aes(x=ordered(scen), y=tot/10, fill=Node)) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits2
cs.hits.sum
cs.hits.sum$scen
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
g.hits2
g.hits
g.hits2 <- ggplot(cs.hits.sum, aes(x=ordered(scen), y=tot/10, fill=factor(Node))) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits2
cs.hits.sum
cs <- data.frame()
app <- data.frame()
dflist <- c(100,80,60,40,20,10)
for (i in dflist) {
# Do some complex things
cs.temp <- read.table(paste("../results/ar",i,"cs-trace.txt",sep=""), header=T)
app.temp <- read.table(paste("../results/ar",i,"app-trace.txt",sep=""), header=T)
cs.temp$scen=i
app.temp$scen=i
cs <- rbind(cs,cs.temp)
app <- rbind(app,app.temp)
}
app
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
g.hits
g.hits <- ggplot(cs.hits.sum, aes(x=ordered(scen), y=tot/10, fill=factor(Node))) + geom_bar(stat="identity") +
ylab("Cache Hit Ratio [%]") + xlab("Cache Admission Rate [%]")
g.hits
g.hits
source('~/ccn/ndnSIM2.1/ns-3/src/ndnSIM/graphs/results.R', echo=TRUE)
summary(app)
hopcounts
app
summary(app)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + ylab("Hopcounts") + ylim(0,5)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(hopcounts, aes(x = Type, y=Packets)) +
stat_summary(fun.data = min.mean.sd.max, geom="boxplot") + ylab("Hopcounts") + ylim(0,5)
